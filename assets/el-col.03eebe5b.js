import{b as m,d as l,y as n,a as y,z as i,j as f,u as p,k as h,w as $}from"./index.7e11bcad.js";const g=Symbol("rowContextKey"),N=m({tag:{type:String,default:"div"},span:{type:Number,default:24},offset:{type:Number,default:0},pull:{type:Number,default:0},push:{type:Number,default:0},xs:{type:l([Number,Object]),default:()=>n({})},sm:{type:l([Number,Object]),default:()=>n({})},md:{type:l([Number,Object]),default:()=>n({})},lg:{type:l([Number,Object]),default:()=>n({})},xl:{type:l([Number,Object]),default:()=>n({})}});var j=y({name:"ElCol",props:N,setup(t,{slots:b}){const{gutter:o}=i(g,{gutter:f(()=>0)}),s=p("col"),r=f(()=>o.value?{paddingLeft:`${o.value/2}px`,paddingRight:`${o.value/2}px`}:{}),d=f(()=>{const a=[];return["span","offset","pull","push"].forEach(e=>{const u=t[e];typeof u=="number"&&(e==="span"?a.push(s.b(`${t[e]}`)):u>0&&a.push(s.b(`${e}-${t[e]}`)))}),["xs","sm","md","lg","xl"].forEach(e=>{if(typeof t[e]=="number")a.push(s.b(`${e}-${t[e]}`));else if(typeof t[e]=="object"){const u=t[e];Object.keys(u).forEach(c=>{a.push(c!=="span"?s.b(`${e}-${c}-${u[c]}`):s.b(`${e}-${u[c]}`))})}}),o.value&&a.push(s.is("guttered")),a});return()=>h(t.tag,{class:[s.b(),d.value],style:r.value},b)}});const E=$(j);export{E,g as r};
